{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Started","text":""},{"location":"#earth-osm","title":"earth-osm","text":"<p>One-command to extract infrastructure data from OpenStreetMap</p> <p> </p> <p> </p>"},{"location":"#overview","title":"\ud83d\udcda Overview","text":"<p>earth-osm downloads, filters, cleans and exports infrastructure data from OpenStreetMap (OSM). It provides a Python API and a CLI interface to extract data for various infrastructure types, such as power lines, substations, and more.</p>"},{"location":"#key-features","title":"\ud83c\udf1f Key Features","text":"<ul> <li>\ud83d\udd0c Extracts infrastructure data from OSM</li> <li>\ud83d\udcc5 Historical data support (specify target dates)</li> <li>\ud83e\uddf9 Cleans and standardizes the data (coming soon)</li> <li>\ud83d\ude80 No API rate limits (data served from GeoFabrik)</li> <li>\ud83d\udc0d Provides a Python API</li> <li>\ud83d\udda5\ufe0f Supports multiprocessing for faster extraction</li> <li>\ud83d\udcca Outputs data in .csv and .geojson formats</li> <li>\ud83c\udf0d Supports global data extraction</li> <li> <p>\ud83d\uddb1\ufe0f Easy-to-use CLI interface</p> </li> <li> <p>\ud83c\udf10 Dual data sources: GeoFabrik (default) and live Overpass API</p> </li> </ul>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"#installation","title":"Installation","text":"<p>Install earth-osm using pip (recommended):</p> <pre><code>pip install earth-osm\n</code></pre> <p>Or with conda:</p> <pre><code>conda install --channel=conda-forge earth-osm\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<p>Extract OSM data using the CLI:</p> <pre><code>earth_osm extract power --regions benin monaco --features substation line\n</code></pre> <p>This command extracts power infrastructure data for Benin and Monaco, focusing on substations and power lines. By default, the resulting .csv and .geojson files are stored in <code>./earth_data/out</code>.</p> <p>Load the extracted data using pandas:</p> <pre><code>import pandas as pd\nimport geopandas as gpd\n\n# For Pandas\ndf_substations = pd.read_csv('./earth_data/out/BJ_raw_substations.csv')\n\n# For GeoPandas\ngdf_substations = gpd.read_file('./earth_data/out/BJ_raw_substations.geojson')\n</code></pre>"},{"location":"#cli-reference","title":"\ud83d\udee0\ufe0f CLI Reference","text":""},{"location":"#extract-command","title":"Extract Command","text":"<pre><code>earth_osm extract &lt;primary&gt; --regions &lt;region1&gt; &lt;region2&gt; ... [options]\n</code></pre>"},{"location":"#arguments","title":"Arguments:","text":"<ul> <li><code>&lt;primary&gt;</code>: Primary feature to extract (e.g power)</li> </ul>"},{"location":"#required-options","title":"Required Options:","text":"<ul> <li><code>--regions</code>: Specify one or more regions using ISO 3166-1 alpha-2, ISO 3166-2 codes, or full names</li> </ul> <p>Tip: A list of regions is available at regions.md</p>"},{"location":"#optional-arguments","title":"Optional Arguments:","text":"Argument Description Default <code>--features</code> Specify sub-features of the primary feature All features <code>--update</code> Update existing data False <code>--no_mp</code> Disable multiprocessing False (MP enabled) <code>--data_dir</code> Path to data directory './earth_data' <code>--out_dir</code> Path to output directory Same as data_dir <code>--out_format</code> Export format(s): csv and/or geojson ['csv', 'geojson'] <code>--agg_feature</code> Aggregate outputs by feature False <code>--agg_region</code> Aggregate outputs by region False <code>--source</code> Data source: geofabrik (default) or overpass geofabrik"},{"location":"#python-api","title":"\ud83d\udc0d Python API","text":"<p>For more advanced usage, you can use the Python API:</p> <pre><code>import earth_osm as eo\n\neo.save_osm_data(\n    primary_name='power',\n    region_list=['benin', 'monaco'],\n    feature_list=['substation', 'line'],\n    update=False,\n    mp=True,\n    data_dir='./earth_data',\n    out_format=['csv', 'geojson'],\n    out_aggregate=False,\n    data_source='geofabrik'  # or 'overpass'\n)\n</code></pre> <p>For historical data, add the <code>target_date</code> parameter:</p> <pre><code>from datetime import datetime\n\n# Download historical data for a specific date\neo.get_osm_data(\n    region_str='malta',\n    primary_name='power',\n    feature_name='line',\n    target_date=datetime(2020, 1, 1)  # Jan 1, 2020\n)\n</code></pre>"},{"location":"#development","title":"\ud83d\udee0\ufe0f Development","text":"<p>To contribute to earth-osm, follow these steps:</p> <ol> <li> <p>(Optional) Install a specific version of earth_osm:    <pre><code>pip install git+https://github.com/pypsa-meets-earth/earth-osm.git@&lt;required-commit-hash&gt;\n</code></pre></p> </li> <li> <p>(Optional) Create a virtual environment for Python &gt;=3.10:    <pre><code>python3 -m venv .venv\nsource .venv/bin/activate\n</code></pre></p> </li> <li> <p>Install the development dependencies:    <pre><code>pip install git+https://github.com/pypsa-meets-earth/earth-osm.git\npip install -e .[dev]\n</code></pre></p> </li> <li> <p>Read the CONTRIBUTING.md file for more detailed information on how to contribute to the project.</p> </li> </ol>"},{"location":"#community","title":"\ud83e\udd1d Community","text":"<p>Join our Discord community to connect with other users and contributors, ask questions, and get support.</p>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<p>For more detailed information, check out our full documentation.</p> <p> Made with \u2764\ufe0f by the PyPSA meets Earth team </p> <p> </p>"},{"location":"regions/","title":"Supported Regions","text":"<p>Earth-OSM supports a wide range of regions across the globe, similar to the regions provided by Geofabrik. These regions are categorized by continents and countries, ensuring comprehensive coverage for various mapping and geospatial needs. Below is a detailed list of the supported regions, including their respective ISO 3166-1 Alpha-2 codes for easy reference.</p> <p>You may use the parent name (e.g asia) or ID (e.g afghanistan) or the two-letter code (e.g AF)</p> Parent ID ISO Code africa algeria DZ angola AO benin BJ botswana BW burkina-faso BF burundi BI cameroon CM canary-islands cape-verde CV central-african-republic CF chad TD comores congo-brazzaville CG congo-democratic-republic CD djibouti DJ egypt EG equatorial-guinea GQ eritrea ER ethiopia ET gabon GA ghana GH guinea GN guinea-bissau GW ivory-coast CI kenya KE lesotho LS liberia LR libya LY madagascar MG malawi MW mali ML mauritania MR mauritius MU morocco MA mozambique MZ namibia NA niger NE nigeria NG rwanda RW saint-helena-ascension-and-tristan-da-cunha SH sao-tome-and-principe ST senegal-and-gambia SN-GM seychelles SC sierra-leone SL somalia SO south-africa ZA south-africa-and-lesotho south-sudan SS sudan SD swaziland SZ tanzania TZ togo TG tunisia TN uganda UG zambia ZM zimbabwe ZW asia afghanistan AF armenia AM azerbaijan AZ bangladesh BD bhutan BT cambodia KH china CN east-timor TL gcc-states QA-AE-OM-BH-KW india IN indonesia ID iran IR iraq IQ israel-and-palestine PS-IL japan JP jordan JO kazakhstan KZ kyrgyzstan KG laos LA lebanon LB malaysia-singapore-brunei MY maldives MV mongolia MN myanmar MM nepal NP north-korea KP pakistan PK philippines PH south-korea KR sri-lanka LK syria SY taiwan TW tajikistan TJ thailand TH turkmenistan TM uzbekistan UZ vietnam VN yemen YE australia-oceania american-oceania VU australia AU cook-islands CK fiji FJ ile-de-clipperton VU kiribati KI marshall-islands MH micronesia FM nauru NR new-caledonia NC new-zealand NZ niue NU palau PW papua-new-guinea PG pitcairn-islands MH polynesie-francaise VU samoa WS solomon-islands SB tokelau VU tonga TO tuvalu TV vanuatu VU wallis-et-futuna VU central-america bahamas belize BZ costa-rica CR cuba el-salvador SV guatemala GT haiti-and-domrep honduras HN jamaica nicaragua NI panama europe albania AL alps andorra AD austria AT azores belarus BY belgium BE bosnia-herzegovina BA britain-and-ireland bulgaria BG croatia HR cyprus CY czech-republic CZ dach denmark DK estonia EE faroe-islands FO finland FI france FR georgia GE germany DE great-britain GB greece GR guernsey-jersey hungary HU iceland IS ireland-and-northern-ireland IE isle-of-man italy IT kosovo RS-KM latvia LV liechtenstein LI lithuania LT luxembourg LU macedonia MK malta MT moldova MD monaco MC montenegro ME netherlands NL norway NO poland PL portugal PT romania RO serbia RS slovakia SK slovenia SI spain ES sweden SE switzerland CH turkey TR ukraine UA north-america canada CA greenland GL mexico MX us US us-midwest us-northeast us-pacific us-south us-west us/alabama US-AL us/alaska US-AK us/arizona US-AZ us/arkansas US-AR us/california US-CA us/colorado US-CO us/connecticut US-CT us/delaware US-DE us/district-of-columbia US-DC us/florida US-FL us/georgia US-GA us/hawaii US-HI us/idaho US-ID us/illinois US-IL us/indiana US-IN us/iowa US-IA us/kansas US-KS us/kentucky US-KY us/louisiana US-LA us/maine US-ME us/maryland US-MD us/massachusetts US-MA us/michigan US-MI us/minnesota US-MN us/mississippi US-MS us/missouri US-MO us/montana US-MT us/nebraska US-NE us/nevada US-NV us/new-hampshire US-NH us/new-jersey US-NJ us/new-mexico US-NM us/new-york US-NY us/north-carolina US-NC us/north-dakota US-ND us/ohio US-OH us/oklahoma US-OK us/oregon US-OR us/pennsylvania US-PA us/puerto-rico PR us/rhode-island US-RI us/south-carolina US-SC us/south-dakota US-SD us/tennessee US-TN us/texas US-TX us/us-virgin-islands VI us/utah US-UT us/vermont US-VT us/virginia US-VA us/washington US-WA us/west-virginia US-WV us/wisconsin US-WI us/wyoming US-WY russia central-fed-district crimean-fed-district UA-43 far-eastern-fed-district kaliningrad north-caucasus-fed-district northwestern-fed-district siberian-fed-district south-fed-district ural-fed-district volga-fed-district south-america argentina AR bolivia BO brazil BR chile CL colombia CO ecuador EC guyana GY paraguay PY peru PE suriname SR uruguay UY venezuela VE baden-wuerttemberg freiburg-regbez karlsruhe-regbez stuttgart-regbez tuebingen-regbez bayern mittelfranken niederbayern oberbayern oberfranken oberpfalz schwaben unterfranken brazil centro-oeste nordeste norte sudeste sul canada alberta CA-AB british-columbia CA-BC manitoba CA-MB new-brunswick CA-NB newfoundland-and-labrador CA-NL northwest-territories CA-NT nova-scotia CA-NS nunavut CA-NU ontario CA-ON prince-edward-island CA-PE quebec CA-QC saskatchewan CA-SK yukon CA-YT england bedfordshire berkshire bristol buckinghamshire cambridgeshire cheshire cornwall cumbria derbyshire devon dorset durham east-sussex east-yorkshire-with-hull essex gloucestershire greater-london greater-manchester hampshire herefordshire hertfordshire isle-of-wight kent lancashire leicestershire lincolnshire merseyside norfolk north-yorkshire northamptonshire northumberland nottinghamshire oxfordshire rutland shropshire somerset south-yorkshire staffordshire suffolk surrey tyne-and-wear warwickshire west-midlands west-sussex west-yorkshire wiltshire worcestershire france alsace aquitaine auvergne basse-normandie bourgogne bretagne centre champagne-ardenne corse franche-comte guadeloupe guyane GF haute-normandie ile-de-france languedoc-roussillon limousin lorraine martinique mayotte midi-pyrenees nord-pas-de-calais pays-de-la-loire picardie poitou-charentes provence-alpes-cote-d-azur reunion rhone-alpes germany baden-wuerttemberg bayern berlin brandenburg bremen hamburg hessen mecklenburg-vorpommern niedersachsen nordrhein-westfalen rheinland-pfalz saarland sachsen sachsen-anhalt schleswig-holstein thueringen great-britain england scotland wales greater-london enfield india central-zone eastern-zone north-eastern-zone northern-zone southern-zone western-zone indonesia java kalimantan maluku nusa-tenggara papua sulawesi sumatra italy centro isole nord-est nord-ovest sud japan chubu chugoku hokkaido kansai kanto kyushu shikoku tohoku netherlands drenthe flevoland friesland gelderland groningen limburg noord-brabant noord-holland overijssel utrecht zeeland zuid-holland nordrhein-westfalen arnsberg-regbez detmold-regbez duesseldorf-regbez koeln-regbez muenster-regbez poland dolnoslaskie kujawsko-pomorskie lodzkie lubelskie lubuskie malopolskie mazowieckie opolskie podkarpackie podlaskie pomorskie slaskie swietokrzyskie warminsko-mazurskie wielkopolskie zachodniopomorskie spain andalucia aragon asturias cantabria castilla-la-mancha castilla-y-leon cataluna ceuta extremadura galicia islas-baleares la-rioja madrid melilla murcia navarra pais-vasco valencia us/california norcal socal"},{"location":"api-docs/","title":"API Reference","text":""},{"location":"api-docs/#api-overview","title":"API Overview","text":""},{"location":"api-docs/#modules","title":"Modules","text":"<ul> <li>No modules</li> </ul>"},{"location":"api-docs/#classes","title":"Classes","text":"<ul> <li>No classes</li> </ul>"},{"location":"api-docs/#functions","title":"Functions","text":"<ul> <li>No functions</li> </ul>"},{"location":"api-docs/args/","title":"Args","text":""},{"location":"api-docs/args/#module-args","title":"module <code>args</code>","text":""},{"location":"api-docs/args/#function-main","title":"function <code>main</code>","text":"<pre><code>main()\n</code></pre> <p>The main function executes on commands: <code>python -m earth_osm</code> and <code>$ earth_osm</code>. It parses the command line and executes the appropriate function. </p>"},{"location":"api-docs/clean/","title":"Clean","text":""},{"location":"api-docs/clean/#module-clean","title":"module <code>clean</code>","text":""},{"location":"api-docs/config/","title":"Config","text":""},{"location":"api-docs/config/#module-config","title":"module <code>config</code>","text":""},{"location":"api-docs/config/#global-variables","title":"Global Variables","text":"<ul> <li>primary_feature_element</li> </ul>"},{"location":"api-docs/eo/","title":"Eo","text":""},{"location":"api-docs/eo/#module-eo","title":"module <code>eo</code>","text":""},{"location":"api-docs/eo/#function-process_region","title":"function <code>process_region</code>","text":"<pre><code>process_region(region, primary_name, feature_name, mp, update, data_dir)\n</code></pre> <p>Process Country </p> <p>Args:</p> <ul> <li><code>region</code>:  Region object </li> <li><code>primary_name</code>:  Primary Feature Name </li> <li><code>feature_name</code>:  Feature Name </li> <li><code>mp</code>:  Multiprocessing object </li> <li><code>update</code>:  Update flag </li> </ul> <p>Returns:  None </p> <p></p>"},{"location":"api-docs/eo/#function-get_osm_data","title":"function <code>get_osm_data</code>","text":"<pre><code>get_osm_data(region_str, primary_name, feature_name, data_dir=None, cached=True)\n</code></pre>"},{"location":"api-docs/eo/#function-save_osm_data","title":"function <code>save_osm_data</code>","text":"<pre><code>save_osm_data(\n    region_list,\n    primary_name,\n    feature_list=None,\n    update=False,\n    mp=True,\n    data_dir='/home/matin/Projects/earth-osm/earth_data',\n    out_dir='/home/matin/Projects/earth-osm/earth_data',\n    out_format='csv',\n    out_aggregate=True\n)\n</code></pre> <p>Get OSM Data for a list of regions and features </p> <p>args:</p> <ul> <li><code>region_list</code>:  list of regions to get data for </li> <li><code>primary_name</code>:  primary feature to get data for </li> <li><code>feature_list</code>:  list of features to get data for </li> <li><code>update</code>:  update data </li> <li><code>mp</code>:  use multiprocessing </li> </ul> <p>returns:  dict of dataframes </p>"},{"location":"api-docs/export/","title":"Export","text":""},{"location":"api-docs/export/#module-export","title":"module <code>export</code>","text":""},{"location":"api-docs/export/#function-get_list_slug","title":"function <code>get_list_slug</code>","text":"<pre><code>get_list_slug(str_list)\n</code></pre>"},{"location":"api-docs/export/#function-convert_pd_to_gdf","title":"function <code>convert_pd_to_gdf</code>","text":"<pre><code>convert_pd_to_gdf(pd_df)\n</code></pre>"},{"location":"api-docs/export/#class-outfilewriter","title":"class <code>OutFileWriter</code>","text":""},{"location":"api-docs/export/#method-__init__","title":"method <code>__init__</code>","text":"<pre><code>__init__(region_list, primary_name, feature_list, data_dir, out_format)\n</code></pre>"},{"location":"api-docs/extract/","title":"Extract","text":""},{"location":"api-docs/extract/#module-extract","title":"module <code>extract</code>","text":""},{"location":"api-docs/extract/#function-primary_entry_filter","title":"function <code>primary_entry_filter</code>","text":"<pre><code>primary_entry_filter(entry, pre_filter)\n</code></pre>"},{"location":"api-docs/extract/#function-id_filter","title":"function <code>id_filter</code>","text":"<pre><code>id_filter(entry, idset)\n</code></pre>"},{"location":"api-docs/extract/#function-way_filter","title":"function <code>way_filter</code>","text":"<pre><code>way_filter(entry, way_relation_members)\n</code></pre>"},{"location":"api-docs/extract/#function-filter_file_block","title":"function <code>filter_file_block</code>","text":"<pre><code>filter_file_block(filename, ofs, header, filter_func, args, kwargs)\n</code></pre>"},{"location":"api-docs/extract/#function-pool_file_query","title":"function <code>pool_file_query</code>","text":"<pre><code>pool_file_query(filename, pool)\n</code></pre> <p>returns query function that accepts a filter function and returns a list of filtered entries </p> <p></p>"},{"location":"api-docs/extract/#function-filter_pbf","title":"function <code>filter_pbf</code>","text":"<pre><code>filter_pbf(filename, pre_filter, multiprocess=True)\n</code></pre> <p>Parallized pre-Filtering of OSM file by a pre_filter </p> <p>Args:</p> <ul> <li><code>filename</code>:    PBF file </li> <li><code>pre_filter</code>:  dict of dicts in the following format: { </li> <li><code>Node</code>:  {primary_name: feature_list},  </li> <li><code>Way</code>:  {primary_name: feature_list}, </li> <li><code>Relation</code>:  {primary_name: feature_list}} </li> </ul> <p>Returns:</p> <ul> <li><code>targetname</code>:  JSON-file </li> </ul>"},{"location":"api-docs/filter/","title":"Filter","text":""},{"location":"api-docs/filter/#module-filter","title":"module <code>filter</code>","text":""},{"location":"api-docs/filter/#function-feature_filter","title":"function <code>feature_filter</code>","text":"<pre><code>feature_filter(primary_data, filter_tuple=('power', 'line'))\n</code></pre>"},{"location":"api-docs/filter/#function-run_feature_filter","title":"function <code>run_feature_filter</code>","text":"<pre><code>run_feature_filter(primary_dict, feature_name)\n</code></pre>"},{"location":"api-docs/filter/#function-run_primary_filter","title":"function <code>run_primary_filter</code>","text":"<pre><code>run_primary_filter(PBF_inputfile, primary_file, primary_name, multiprocess)\n</code></pre>"},{"location":"api-docs/filter/#function-get_filtered_data","title":"function <code>get_filtered_data</code>","text":"<pre><code>get_filtered_data(region, primary_name, feature_name, mp, update, data_dir)\n</code></pre>"},{"location":"api-docs/gfk_data/","title":"Gfk data","text":""},{"location":"api-docs/gfk_data/#module-gfk_data","title":"module <code>gfk_data</code>","text":""},{"location":"api-docs/gfk_data/#global-variables","title":"Global Variables","text":"<ul> <li>pkg_data_dir</li> <li>sitemap</li> <li>f</li> <li>d</li> <li>row_list</li> <li>feature</li> </ul>"},{"location":"api-docs/gfk_data/#function-get_geom_sitemap","title":"function <code>get_geom_sitemap</code>","text":"<pre><code>get_geom_sitemap()\n</code></pre>"},{"location":"api-docs/gfk_data/#function-get_root_list","title":"function <code>get_root_list</code>","text":"<pre><code>get_root_list()\n</code></pre> <p>Returns a list of regions without parents (i.e continents) </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_all_valid_list","title":"function <code>get_all_valid_list</code>","text":"<pre><code>get_all_valid_list()\n</code></pre> <p>Returns a list of all valid region ids </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_all_regions_dict","title":"function <code>get_all_regions_dict</code>","text":"<pre><code>get_all_regions_dict(level=0)\n</code></pre> <p>It takes a level argument, and returns a dictionary of all regions, grouped by their parent region </p> <p>Args:</p> <ul> <li><code>level</code>:  0 = all regions, 1 = world regions, 2 = local regions, defaults to 0 A dictionary of dictionaries. </li> </ul> <p></p>"},{"location":"api-docs/gfk_data/#function-view_regions","title":"function <code>view_regions</code>","text":"<pre><code>view_regions(level=0)\n</code></pre> <p>Takes the <code>all_regions</code> dictionary and returns a new dictionary with the same keys, but with the values being the <code>region_id</code>s of the regions </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_region_dict","title":"function <code>get_region_dict</code>","text":"<pre><code>get_region_dict(id)\n</code></pre> <p>Takes a region id (eg. germany) and returns a ditctionary consisting of strings 'id', 'name', 'parent', 'short_code' and dictionary of 'urls' Raises error if id is not found </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_id_by_code","title":"function <code>get_id_by_code</code>","text":"<pre><code>get_id_by_code(code)\n</code></pre> <p>Takes a region code (eg. DE) and returns its id (eg. germany) Supresses error if id is not found </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_code_by_id","title":"function <code>get_code_by_id</code>","text":"<pre><code>get_code_by_id(id)\n</code></pre> <p>Takes a region id (eg. germany) and returns its code (eg. DE) Supresses error if id is not found </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_id_by_str","title":"function <code>get_id_by_str</code>","text":"<pre><code>get_id_by_str(region_str)\n</code></pre> <p>Takes a region id or code (eg. DE, germany) and returns its id (eg. germany) Raises error if the string is not a valid id or code </p> <p></p>"},{"location":"api-docs/gfk_data/#function-get_region_tuple","title":"function <code>get_region_tuple</code>","text":"<pre><code>get_region_tuple(region_str)\n</code></pre> <p>Takes a region id or code (eg. DE, germany) and returns a named tuple with  'id', 'name', 'short', 'parent', 'short_code' and dictionary of 'urls' The 'short' field is an iso code if found otherwise the id is used. iso3166-1:alpha2 is used for countries, iso3166-2 is used for sub-divisions Raises error if the string is not a valid id or code </p>"},{"location":"api-docs/gfk_download/","title":"Gfk download","text":""},{"location":"api-docs/gfk_download/#module-gfk_download","title":"module <code>gfk_download</code>","text":""},{"location":"api-docs/gfk_download/#function-download_file","title":"function <code>download_file</code>","text":"<pre><code>download_file(url, dir, exists_ok=False)\n</code></pre> <p>Download file from url to dir </p> <p>Args:</p> <ul> <li><code>url</code> (str):  url to download </li> <li><code>dir</code> (str):  directory to download to </li> <li><code>exists_ok</code> (bool):  Flag to allow skipping download if file exists. </li> </ul> <p>Returns:</p> <ul> <li><code>str</code>:  filepath of downloaded file </li> </ul> <p></p>"},{"location":"api-docs/gfk_download/#function-download_sitemap","title":"function <code>download_sitemap</code>","text":"<pre><code>download_sitemap(geom, pkg_data_dir)\n</code></pre>"},{"location":"api-docs/gfk_download/#function-download_pbf","title":"function <code>download_pbf</code>","text":"<pre><code>download_pbf(url, update, data_dir)\n</code></pre>"},{"location":"api-docs/gfk_download/#function-calculate_md5","title":"function <code>calculate_md5</code>","text":"<pre><code>calculate_md5(fname)\n</code></pre>"},{"location":"api-docs/gfk_download/#function-verify_pbf","title":"function <code>verify_pbf</code>","text":"<pre><code>verify_pbf(pbf_inputfile, pbf_md5file)\n</code></pre>"},{"location":"api-docs/osmpbf/","title":"Osmpbf","text":""},{"location":"api-docs/osmpbf/#module-osmpbf","title":"module <code>osmpbf</code>","text":""},{"location":"api-docs/osmpbf/#class-node","title":"class <code>Node</code>","text":"<p>Node(id, tags, lonlat) </p> <p></p>"},{"location":"api-docs/osmpbf/#class-relation","title":"class <code>Relation</code>","text":"<p>Relation(id, tags, members) </p> <p></p>"},{"location":"api-docs/osmpbf/#class-way","title":"class <code>Way</code>","text":"<p>Way(id, tags, refs) </p>"},{"location":"api-docs/tagdata/","title":"Tagdata","text":""},{"location":"api-docs/tagdata/#module-tagdata","title":"module <code>tagdata</code>","text":""},{"location":"api-docs/tagdata/#global-variables","title":"Global Variables","text":"<ul> <li>tag_data</li> </ul>"},{"location":"api-docs/tagdata/#function-get_feature_list","title":"function <code>get_feature_list</code>","text":"<pre><code>get_feature_list(primary_name)\n</code></pre>"},{"location":"api-docs/tagdata/#function-get_primary_list","title":"function <code>get_primary_list</code>","text":"<pre><code>get_primary_list()\n</code></pre>"},{"location":"api-docs/tagdata/#function-load_tag_data","title":"function <code>load_tag_data</code>","text":"<pre><code>load_tag_data()\n</code></pre>"},{"location":"api-docs/tagdata/#function-get_popular_features","title":"function <code>get_popular_features</code>","text":"<pre><code>get_popular_features(primary_name)\n</code></pre>"},{"location":"api-docs/taginfo/","title":"Taginfo","text":""},{"location":"api-docs/taginfo/#module-taginfo","title":"module <code>taginfo</code>","text":""},{"location":"api-docs/taginfo/#global-variables","title":"Global Variables","text":"<ul> <li>WIKI_PRIMARY_LIST</li> <li>BASE_URL</li> </ul>"},{"location":"api-docs/taginfo/#function-fetch_data_from_api","title":"function <code>fetch_data_from_api</code>","text":"<pre><code>fetch_data_from_api(path: str, params: dict) \u2192 dict\n</code></pre>"},{"location":"api-docs/taginfo/#function-get_key_overview","title":"function <code>get_key_overview</code>","text":"<pre><code>get_key_overview(key: str) \u2192 dict\n</code></pre>"},{"location":"api-docs/taginfo/#function-get_wiki_features_df","title":"function <code>get_wiki_features_df</code>","text":"<pre><code>get_wiki_features_df(key: str) \u2192 DataFrame\n</code></pre>"},{"location":"api-docs/taginfo/#function-get_wiki_features","title":"function <code>get_wiki_features</code>","text":"<pre><code>get_wiki_features(key: str) \u2192 dict\n</code></pre>"},{"location":"api-docs/taginfo/#function-fetch_all_data","title":"function <code>fetch_all_data</code>","text":"<pre><code>fetch_all_data()\n</code></pre>"},{"location":"api-docs/taginfo/#function-save_data","title":"function <code>save_data</code>","text":"<pre><code>save_data(all_data: dict, save_path: str)\n</code></pre>"},{"location":"api-docs/taginfo/#function-get_data","title":"function <code>get_data</code>","text":"<pre><code>get_data(data_filepath: str, update: bool = False) \u2192 dict\n</code></pre>"},{"location":"api-docs/taginfo/#function-get_tag_data","title":"function <code>get_tag_data</code>","text":"<pre><code>get_tag_data()\n</code></pre>"},{"location":"api-docs/utils/","title":"Utils","text":""},{"location":"api-docs/utils/#module-utils","title":"module <code>utils</code>","text":""},{"location":"api-docs/utils/#function-lonlat_lookup","title":"function <code>lonlat_lookup</code>","text":"<pre><code>lonlat_lookup(df_way, primary_data)\n</code></pre> <p>Lookup refs and convert to list of longlats </p> <p></p>"},{"location":"api-docs/utils/#function-way_or_area","title":"function <code>way_or_area</code>","text":"<pre><code>way_or_area(df_way)\n</code></pre>"},{"location":"api-docs/utils/#function-tags_melt","title":"function <code>tags_melt</code>","text":"<pre><code>tags_melt(df_exp, nan_threshold=0.75)\n</code></pre>"},{"location":"api-docs/utils/#function-columns_melt","title":"function <code>columns_melt</code>","text":"<pre><code>columns_melt(df_exp, columns_to_move)\n</code></pre>"},{"location":"api-docs/utils/#function-tags_explode","title":"function <code>tags_explode</code>","text":"<pre><code>tags_explode(df_melt)\n</code></pre>"},{"location":"generated-docs/regions_table/","title":"Regions table","text":"Parent ID ISO Code africa algeria DZ angola AO benin BJ botswana BW burkina-faso BF burundi BI cameroon CM canary-islands cape-verde CV central-african-republic CF chad TD comores congo-brazzaville CG congo-democratic-republic CD djibouti DJ egypt EG equatorial-guinea GQ eritrea ER ethiopia ET gabon GA ghana GH guinea GN guinea-bissau GW ivory-coast CI kenya KE lesotho LS liberia LR libya LY madagascar MG malawi MW mali ML mauritania MR mauritius MU morocco MA mozambique MZ namibia NA niger NE nigeria NG rwanda RW saint-helena-ascension-and-tristan-da-cunha SH sao-tome-and-principe ST senegal-and-gambia SN-GM seychelles SC sierra-leone SL somalia SO south-africa ZA south-africa-and-lesotho south-sudan SS sudan SD swaziland SZ tanzania TZ togo TG tunisia TN uganda UG zambia ZM zimbabwe ZW asia afghanistan AF armenia AM azerbaijan AZ bangladesh BD bhutan BT cambodia KH china CN east-timor TL gcc-states QA-AE-OM-BH-KW india IN indonesia ID iran IR iraq IQ israel-and-palestine PS-IL japan JP jordan JO kazakhstan KZ kyrgyzstan KG laos LA lebanon LB malaysia-singapore-brunei MY maldives MV mongolia MN myanmar MM nepal NP north-korea KP pakistan PK philippines PH south-korea KR sri-lanka LK syria SY taiwan TW tajikistan TJ thailand TH turkmenistan TM uzbekistan UZ vietnam VN yemen YE australia-oceania american-oceania VU australia AU cook-islands CK fiji FJ ile-de-clipperton VU kiribati KI marshall-islands MH micronesia FM nauru NR new-caledonia NC new-zealand NZ niue NU palau PW papua-new-guinea PG pitcairn-islands MH polynesie-francaise VU samoa WS solomon-islands SB tokelau VU tonga TO tuvalu TV vanuatu VU wallis-et-futuna VU central-america bahamas belize BZ costa-rica CR cuba el-salvador SV guatemala GT haiti-and-domrep honduras HN jamaica nicaragua NI panama europe albania AL alps andorra AD austria AT azores belarus BY belgium BE bosnia-herzegovina BA britain-and-ireland bulgaria BG croatia HR cyprus CY czech-republic CZ dach denmark DK estonia EE faroe-islands FO finland FI france FR georgia GE germany DE great-britain GB greece GR guernsey-jersey hungary HU iceland IS ireland-and-northern-ireland IE isle-of-man italy IT kosovo RS-KM latvia LV liechtenstein LI lithuania LT luxembourg LU macedonia MK malta MT moldova MD monaco MC montenegro ME netherlands NL norway NO poland PL portugal PT romania RO serbia RS slovakia SK slovenia SI spain ES sweden SE switzerland CH turkey TR ukraine UA north-america canada CA greenland GL mexico MX us US us-midwest us-northeast us-pacific us-south us-west us/alabama US-AL us/alaska US-AK us/arizona US-AZ us/arkansas US-AR us/california US-CA us/colorado US-CO us/connecticut US-CT us/delaware US-DE us/district-of-columbia US-DC us/florida US-FL us/georgia US-GA us/hawaii US-HI us/idaho US-ID us/illinois US-IL us/indiana US-IN us/iowa US-IA us/kansas US-KS us/kentucky US-KY us/louisiana US-LA us/maine US-ME us/maryland US-MD us/massachusetts US-MA us/michigan US-MI us/minnesota US-MN us/mississippi US-MS us/missouri US-MO us/montana US-MT us/nebraska US-NE us/nevada US-NV us/new-hampshire US-NH us/new-jersey US-NJ us/new-mexico US-NM us/new-york US-NY us/north-carolina US-NC us/north-dakota US-ND us/ohio US-OH us/oklahoma US-OK us/oregon US-OR us/pennsylvania US-PA us/puerto-rico PR us/rhode-island US-RI us/south-carolina US-SC us/south-dakota US-SD us/tennessee US-TN us/texas US-TX us/us-virgin-islands VI us/utah US-UT us/vermont US-VT us/virginia US-VA us/washington US-WA us/west-virginia US-WV us/wisconsin US-WI us/wyoming US-WY russia central-fed-district crimean-fed-district UA-43 far-eastern-fed-district kaliningrad north-caucasus-fed-district northwestern-fed-district siberian-fed-district south-fed-district ural-fed-district volga-fed-district south-america argentina AR bolivia BO brazil BR chile CL colombia CO ecuador EC guyana GY paraguay PY peru PE suriname SR uruguay UY venezuela VE baden-wuerttemberg freiburg-regbez karlsruhe-regbez stuttgart-regbez tuebingen-regbez bayern mittelfranken niederbayern oberbayern oberfranken oberpfalz schwaben unterfranken brazil centro-oeste nordeste norte sudeste sul canada alberta CA-AB british-columbia CA-BC manitoba CA-MB new-brunswick CA-NB newfoundland-and-labrador CA-NL northwest-territories CA-NT nova-scotia CA-NS nunavut CA-NU ontario CA-ON prince-edward-island CA-PE quebec CA-QC saskatchewan CA-SK yukon CA-YT england bedfordshire berkshire bristol buckinghamshire cambridgeshire cheshire cornwall cumbria derbyshire devon dorset durham east-sussex east-yorkshire-with-hull essex gloucestershire greater-london greater-manchester hampshire herefordshire hertfordshire isle-of-wight kent lancashire leicestershire lincolnshire merseyside norfolk north-yorkshire northamptonshire northumberland nottinghamshire oxfordshire rutland shropshire somerset south-yorkshire staffordshire suffolk surrey tyne-and-wear warwickshire west-midlands west-sussex west-yorkshire wiltshire worcestershire france alsace aquitaine auvergne basse-normandie bourgogne bretagne centre champagne-ardenne corse franche-comte guadeloupe guyane GF haute-normandie ile-de-france languedoc-roussillon limousin lorraine martinique mayotte midi-pyrenees nord-pas-de-calais pays-de-la-loire picardie poitou-charentes provence-alpes-cote-d-azur reunion rhone-alpes germany baden-wuerttemberg bayern berlin brandenburg bremen hamburg hessen mecklenburg-vorpommern niedersachsen nordrhein-westfalen rheinland-pfalz saarland sachsen sachsen-anhalt schleswig-holstein thueringen great-britain england scotland wales greater-london enfield india central-zone eastern-zone north-eastern-zone northern-zone southern-zone western-zone indonesia java kalimantan maluku nusa-tenggara papua sulawesi sumatra italy centro isole nord-est nord-ovest sud japan chubu chugoku hokkaido kansai kanto kyushu shikoku tohoku netherlands drenthe flevoland friesland gelderland groningen limburg noord-brabant noord-holland overijssel utrecht zeeland zuid-holland nordrhein-westfalen arnsberg-regbez detmold-regbez duesseldorf-regbez koeln-regbez muenster-regbez poland dolnoslaskie kujawsko-pomorskie lodzkie lubelskie lubuskie malopolskie mazowieckie opolskie podkarpackie podlaskie pomorskie slaskie swietokrzyskie warminsko-mazurskie wielkopolskie zachodniopomorskie spain andalucia aragon asturias cantabria castilla-la-mancha castilla-y-leon cataluna ceuta extremadura galicia islas-baleares la-rioja madrid melilla murcia navarra pais-vasco valencia us/california norcal socal"}]}